
Devel::SizeMe is a variant of Devel::Size that can stream out detailed
information about the size of individual data-structures and the links
between them.

It can do this the entire perl interpreter as well as specific data structures.

It comes with scripts for storing this data in a database and visualizing it in
various forms, including graphs and an interactive treemap.

Current implementation is all very alpha and rather hackish.


TODO:

    Remove log scale checkboc from the treemp as it doesn't work yet
    Devel::SizeMe::Core - loads XS and sets options
    Devel::SizeMe - loads Devel::SizeMe::Core
        -d:SizeMe=opts?
    Devel::SizeMe::Stream - parse raw stream
    Devel::SizeMe::Store - db write
    Devel::SizeMe::Data - db read / orlite?
    Devel::SizeMe::Graph - data reading/processing for sizeme_graph
    sizeme_store - script wrapper for Devel::SizeMe::Store
    sizeme_graph - Mojolicious app wrapper using Devel::SizeMe::Graph
    tests!
    Support multiple runs to same sizeme_store process, generating separate files
    Name runs to allow total_size (for example) of multiple data structures

    two cases where PERL_SUBVERSION is checked with a plain || (marked XXX)

    Add addr to leaf to enable visualization of memory layout

    Add token for ptr to node already seen (identified by addr I presume)
        so we can move from a Tree to a DAG and see alternative name paths
        and reference loops
